#!/bin/bash
#### App file generated with YoloGen, the Yunohost app generator, version {{ parameters['GENERATOR_VERSION'] }}.
{% if parameters["tutorial"] -%} # This is the tutorial version of the app.
# It contains extra commands to explain what should be done in case you want to adjust some part of the script.
# Once you are done, you may remove them.
{% endif -%}
#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$install_dir"

{% if parameters["tutorial"] -%}
# $install_dir will automatically be initialized with some decent
# permission by default ... however, you may need to recursively reapply
# ownership to all files such as after the ynh_setup_source step
{% endif -%}
chown -R $app:www-data "$install_dir"

{% if parameters["data_dir"] -%}
#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Restoring the data directory..." --weight=1

ynh_restore_file --origin_path="$data_dir" --not_mandatory

# (Same as for install dir)
chown -R $app:www-data "$data_dir"
{% endif -%}

{% if parameters["use_db"] -%}
#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================
    {% if parameters["use_db"] == 'mysql' -%}
ynh_script_progression --message="Restoring the MySQL database..." --weight=1

ynh_mysql_connect_as --user=$db_user --password=$db_pwd --database=$db_name < ./db.sql
    {% endif -%}

    {% if parameters["use_db"] == 'postgresql' -%}
ynh_script_progression --message="Restoring the PostgreSQL database..." --weight=1

ynh_psql_connect_as --user=$db_user --password=$db_pwd --database=$db_name < ./db.sql
    {% endif -%}
{% endif -%}
#=================================================
# RESTORE SYSTEM CONFIGURATIONS
#=================================================
# RESTORE THE PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring system configurations related to $app..." --weight=1

# This should be a symetric version of what happens in the install script

{% if parameters["use_php"] -%}
ynh_restore_file --origin_path="/etc/php/$phpversion/fpm/pool.d/$app.conf"
{% endif -%}

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

{% if parameters["use_systemd_service"] -%}
ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable $app.service --quiet

yunohost service add $app --description="{{ parameters['systemd_service_description'] }}" --log="/var/log/$app/$app.log"
{% endif -%}

{% if parameters["use_logrotate"] -%}
ynh_restore_file --origin_path="/etc/logrotate.d/$app"
{% endif -%}
{% if parameters["use_fail2ban"] -%}
ynh_restore_file --origin_path="/etc/fail2ban/jail.d/$app.conf"
ynh_restore_file --origin_path="/etc/fail2ban/filter.d/$app.conf"
ynh_systemd_action --action=restart --service_name=fail2ban
{% endif -%}
# Other various files...

ynh_restore_file --origin_path="/etc/cron.d/$app"
ynh_restore_file --origin_path="/etc/$app/"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM OR THE APP SERVICE
#=================================================
ynh_script_progression --message="Reloading NGINX web server and $app's service..." --weight=1

# Typically you only have either $app or php-fpm but not both at the same time...
{% if parameters["use_systemd_service"] -%}
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"
{% endif -%}
{% if parameters["use_php"] -%}
ynh_systemd_action --service_name=php$phpversion-fpm --action=reload
{% endif -%}

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
